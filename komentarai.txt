1. Pasiimam API. Internete besimetanti. Jsonplacholder, DummyAPI
2. Postman tikrindavom requestus
3. Pagal API dokumentacija apsirašydavom requestus testavimui
4. Atlikdavom rankini testavima(apsirašydavom vienkartini testą ir jį paleisdavom)
5. Testuodavom visus request pagal bendrus gyvybes patikrinimo(smoke) testavima
*6. Automatizuoti testus(4 punktą paleidinėti automatiskai pagal kazkokius kriterijus
(kiekvienos dienos 8:00, įkelinėjant į github ...))


1. mes turime API kodą(ne visada dokumentacija, ne visada aprasyti visi request)
2. mes turim moketi ji paleisti
3. jei jis blogai veikia, minimaliai pataisyti
*4. Unit testai. Juos rašo programuotojas
5. Pagal API dokumentacija apsirašydavom requestus testavimui
6. Atlikdavom rankini testavima(apsirašydavom vienkartini testą ir jį paleisdavom)
7. Testuodavom visus request pagal bendrus gyvybes patikrinimo(smoke) testavima
*8. Automatizuoti testus(4 punktą paleidinėti automatiskai pagal kazkokius kriterijus
(kiekvienos dienos 8:00, įkelinėjant į github ...))
9. Cypress testavimo irankis. 
    *Automatizuotam dizaino testavimui
    *API testavimui

___________________
Biblioteka - knygos, autoriai ir pilnas CRUD(create, read, update, delete)
Stack - technologijos,kurias naudojam
1. Susikurti savo API
    1.1 Duombazės /create (Postgresql) x
    1.2 Serveris (Node.js + express.js) 
    1.3 Bazinės Javascript žinios
//Node.js + express.js + Postgresql + /////// React.js(dizainui)


